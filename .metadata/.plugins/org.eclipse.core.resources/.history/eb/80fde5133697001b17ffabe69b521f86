package com.kh.board.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.kh.board.model.service.BoardService;

/**
 * Servlet implementation class BoardListServlet
 */
@WebServlet("/list.bo")
public class BoardListServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public BoardListServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//---------------------페이징 처리 ----------------
		int listCount;     //현재 총 게시글 횟수
		int currentPage;   // 현재 페이지(즉, 요청한 페이지)
		int pageLimit;     // 한 페이지 하단에 보여질 페이징바의 페이지 최대갯수(몇개단위)
		int boardLimit;    // 한 페이지 내에 보여질 게시글 최대 갯수(몇개 단위)
		
		int maxPage;       // 전체 페이지들 중 가장 마지막 페이지(listCount, boardLimit를 가지고 구할것)
		int startPage;     // 현재 페이지에 하단에 보여질 페이징 바의 시작수(currentPage, pageLimit를 가지고 구할것)
		int endPage;       // 현재 페이지에 하단에 보여질 페이징 바의 끝 수 (statPage, pageLimit, maxPage를 가지고 구할 것)
		
		// * listCount : 총 게시글 갯수 조회해서 담기
		listCount = new BoardService().selectListCount();
		
		// * currentPage : 현재 요청한 페이지
		currentPage = Integer.parseInt(request.getParameter("currentPage"));
		
		// * pageLimit : 한 페이지 하단에 보여질 페이지 최대 개수(페이지 목록들 몇 개 단위)
		pageLimit = 10;
		
		// * boardLimit : 한 페이지 내에 보여질 게시글 최대 개수
		boardLimit = 10;
		
		/* maxPage : 총 페이지 수(마지막 페이지)
		 * 
		 * listCount, boardLimit에 영향을 받음
		 * ex) boardLimit이 10이라는 가정 하에...
		 * 

		 * 
		 * 
		 */
		maxPage = (int)Math.ceil((double)listCount / boardLimit);
		
		/*
		 * startPage : 현재 페이지에 보여질 페이징 바의 시작 수...
		 * pageLimit, currentPage에 영향을 받음
		 * 
		 */
		startPage = (currentPage - 1) / pageLimit * pageLimit + 1 ;
		
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
